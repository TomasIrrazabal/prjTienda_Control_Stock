<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gcCH+H9fhVeAXdcVLAAAAABJRU5ErkJggg==
</value>
  </data>
</root>